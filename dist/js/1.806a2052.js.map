{"version":3,"sources":["webpack:///./src/utils/request.js","webpack:///./src/api/https.js","webpack:///./src/actions/SolidCarouselAction.js","webpack:///./src/pages/SolidCarousel/SolidCarousel.js"],"names":["instance","axios","create","timeout","isShowLoading","interceptors","request","use","config","headers","error","console","warn","reject","response","status","data","code","params","show","get","url","post","getImgs1080","param","getImgs","resolve","https","then","res","imgList","SolidCarousel","props","state","_renderImgItem","SolidCarouselAction","setState","this","item","index","className","key","width","height","src","alt","Component"],"mappings":"ogBAEMA,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,MAmCb,SAASC,KAhCTJ,EAASK,aAAaC,QAAQC,KAC1B,SAAAC,GAEI,OADAA,EAAOC,QAAQ,gBAAkB,oCAC1BD,KAEX,SAAAE,GAEI,OADAC,QAAQC,KAAKF,GACN,IAAQG,OAAOH,MAK9BV,EAASK,aAAaS,SAASP,KAC3B,SAAAO,GAEI,GADAV,GAAc,GACS,MAApBU,EAASC,OAAgB,CACxB,IAAIC,EAAOF,EAASE,KACpB,GAAiB,KAAdA,EAAKC,KAGJ,OAAOD,EAAKA,KAFZL,QAAQC,KAAK,aAMzB,SAAAF,GAGI,OAFAN,GAAc,GACdO,QAAQC,KAAKF,GACN,IAAQG,OAAOH,M,IAQxBJ,E,iFACSY,EAAOC,GAEd,OADAf,EAAce,GACPnB,EAASoB,IAAIF,EAAOG,IAAKH,EAAOF,Q,2BAE/BE,EAAOC,GAEf,OADAf,EAAce,GACPnB,EAASsB,KAAKJ,EAAOG,IAAKH,EAAOF,U,KAGjCV,ICjDFiB,EAAc,SAACC,GAAW,IAAMN,EAAS,GAAwD,OAApDA,EAAOF,KAAOQ,EAAON,EAAOG,IAAI,oBAA2Bf,EAAQc,IAAIF,ICA1H,SAASO,IACZ,OAAO,IAAI,KAAQ,SAACC,EAASb,GACzBc,EAAMJ,cAAcK,MAAK,SAAAC,GACrB,IAAIC,EAAUD,EACdH,EAAQI,S,mYCDCC,E,gCACjB,WAAYC,GAAO,2BACf,cAAMA,GACN,EAAKC,MAAQ,CAAEH,QAAS,MACxB,EAAKI,eAAiB,QAAKA,gBAAL,eAHP,E,wDAKC,WAChBC,EAAoBV,UAAUG,MAAK,SAAAC,GAC/B,EAAKO,SAAS,CAAEN,QAAQD,S,uCAGf,MACb,OAAOQ,KAAKJ,MAAMH,SAAW,MAAAO,KAAKJ,MAAMH,SAAX,QAAuB,SAACQ,EAAMC,GACvD,OAAO,wBAAIC,UAAU,UAAUC,IAAK,WAAWF,GAAO,yBAAKG,MAAM,MAAMC,OAAO,MAAMC,IAAKN,EAAKjB,IAAKwB,IAAI,W,+BAI3G,OACI,yBAAKL,UAAU,aACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,cACTH,KAAKH,wB,GArBaY,iB","file":"js/1.806a2052.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    timeout: 3000\n});\n// 请求拦截期\ninstance.interceptors.request.use(\n    config => {\n        config.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n        return config;\n    },\n    error => {\n        console.warn(error);\n        return Promise.reject(error); \n    }\n);\n\n// 相应拦截器\ninstance.interceptors.response.use(\n    response => {\n        isShowLoading(false);\n        if(response.status === 200) {\n            let data = response.data\n            if(data.code === 10) {\n                console.warn(\"未知错误!\");\n            }else {\n                return data.data;\n            }\n        }\n    },\n    error => {\n        isShowLoading(false);\n        console.warn(error);\n        return Promise.reject(error); \n    }\n)\n\n// 加载动画\nfunction isShowLoading() {\n\n}\nclass request {\n    static get(params,show) {\n        isShowLoading(show);\n        return instance.get(params.url, params.data)\n    }\n    static post(params,show) {\n        isShowLoading(show);\n        return instance.post(params.url, params.data)\n    }\n}\nexport default request;","import request from '@/utils/request';\n\nexport const getImgs1080 = (param) => {const params = {}; params.data = param; params.url=\"mock/img1080.json\";return request.get(params)};","import { https } from \"@/api\";\n\nexport function getImgs() {\n    return new Promise((resolve, reject) => {\n        https.getImgs1080().then(res => {\n            let imgList = res;\n            resolve(imgList);\n        })\n    });\n}","import React, { Component } from 'react';\nimport { SolidCarouselAction } from '@/actions';\nimport styles from './SolidCarousel.module.less';\n\n\nexport default class SolidCarousel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { imgList: null }\n        this._renderImgItem = this._renderImgItem.bind(this);\n    }\n    componentDidMount() {\n        SolidCarouselAction.getImgs().then(res => {\n            this.setState({ imgList:res });\n        });\n    }\n    _renderImgItem() {\n        return this.state.imgList && this.state.imgList.map((item, index) => {\n            return <li className=\"imgItem\" key={\"imgIndex\"+index}><img width=\"192\" height=\"108\" src={item.url} alt=\"\" /></li>\n        })\n    }\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"PositionBox\">\n                    <ul className=\"imgWrapper\">\n                        {this._renderImgItem()}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n"],"sourceRoot":""}