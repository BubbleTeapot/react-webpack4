{"version":3,"sources":["webpack:///./src/redux/actions/index.js","webpack:///./src/utils/renderRouter.js","webpack:///./src/redux/reducers/user.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/index.js","webpack:///./src/App.js"],"names":["USER_INFO","userInfo","user","type","renderRoutes","routes","authed","authPath","extraProps","switchProps","route","i","key","path","exact","strict","render","props","requiresAuth","component","to","pathname","state","from","location","setUserInfo","name","action","combineReducers","store","createStore","reducers","applyMiddleware","thunk","App"],"mappings":"iGAAA,oEAAO,IAAMA,EAAY,YAEZC,EAAW,SAAAC,GACpB,MAAO,CACHC,KAAMH,EACNE,U,wHCMFE,EAAe,SACnBC,EACAC,GAFmB,IAGnBC,EAHmB,uDAGR,SACXC,EAJmB,uDAIN,GACbC,EALmB,uDAKL,GALK,OAOnBJ,EACE,kBAAC,OAAWI,EACT,IAAAJ,GAAM,KAANA,GAAW,SAACK,EAAOC,GAAR,OACV,kBAAC,OAAD,CACEC,IAAKF,EAAME,KAAOD,EAClBE,KAAMH,EAAMG,KACZC,MAAOJ,EAAMI,MACbC,OAAQL,EAAMK,OACdC,OAAQ,SAACC,GACP,OAAKP,EAAMQ,cAAgBZ,GAAUI,EAAMG,OAASN,EAEhD,kBAACG,EAAMS,UAAP,OAAqBF,EAAWT,EAAhC,CAA4CE,MAAOA,KAIrD,kBAAC,OAAD,CACEU,GAAI,CAAEC,SAAUd,EAAUe,MAAO,CAAEC,KAAMN,EAAMO,oBAOzD,MAESpB,I,0nBCzCA,SAASqB,IAAmD,IAAvCH,EAAuC,uDAA/B,CAACI,KAAM,eAAgBC,EAAQ,uCACvE,OAAOA,EAAOxB,MACV,KAAKH,OACD,IAAI0B,EAAOC,EAAOzB,KAClB,cAAWoB,GAAX,IAAkBI,SACtB,QACI,OAAOJ,GCLJM,qBAAgB,CAC3BH,gB,qBCAEI,EAAQC,eAAYC,EAAUC,eAAgBC,MAErCJ,ICDf,SAASK,EAAT,GAAsB,IAARxB,EAAQ,EAARA,MACZ,OACE,kBAAC,OAAD,CAAUmB,MAAOA,GACdzB,EAAaM,EAAML,SAIX6B","file":"js/2.9e1634fc.js","sourcesContent":["export const USER_INFO = 'USER_INFO';\n\nexport const userInfo = user => {\n    return {\n        type: USER_INFO,\n        user\n    }\n}","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\n\r\n/**\r\n * \r\n * @param {*} routes 路由数组\r\n * @param {*} authed \r\n * @param {*} authPath 无权限默认页面\r\n * @param {*} extraProps \r\n * @param {*} switchProps \r\n */\r\nconst renderRoutes = (\r\n  routes,\r\n  authed,\r\n  authPath = '/login',\r\n  extraProps = {},\r\n  switchProps = {}\r\n) =>\r\n  routes ? (\r\n    <Switch {...switchProps}>\r\n      {routes.map((route, i) => (\r\n        <Route\r\n          key={route.key || i}\r\n          path={route.path}\r\n          exact={route.exact}\r\n          strict={route.strict}\r\n          render={(props) => {\r\n            if (!route.requiresAuth || authed || route.path === authPath) {\r\n              return (\r\n                <route.component {...props} {...extraProps} route={route} />\r\n              );\r\n            }\r\n            return (\r\n              <Redirect\r\n                to={{ pathname: authPath, state: { from: props.location } }}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      ))}\r\n    </Switch>\r\n  ) : null;\r\n\r\nexport default renderRoutes;","import { USER_INFO } from \"../actions\";\n\nexport default function setUserInfo(state = {name: \"react-redux\"}, action) {\n    switch(action.type) {\n        case USER_INFO: \n            let name = action.user\n            return {...state, name}\n        default: \n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport setUserInfo from './user';\n\nexport default combineReducers({\n    setUserInfo\n});","import {applyMiddleware, createStore} from 'redux';\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport renderRoutes from './utils/renderRouter';\nimport { Provider } from 'react-redux';\nimport store from './redux';\n\nfunction App({route}) {\n  return (\n    <Provider store={store}>\n      {renderRoutes(route.routes)}\n    </Provider>\n  );\n}\nexport default App;"],"sourceRoot":""}